{"version":3,"sources":["components/layout/Header.js","actions/types.js","actions/messages.js","components/leads/Form.js","actions/leads.js","components/leads/Leads.js","components/leads/Dashboard.js","components/layout/Alert.js","reducers/leads.js","reducers/errors.js","reducers/messages.js","reducers/index.js","store.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","GET_LEADS","DELETE_LEAD","ADD_LEAD","GET_ERRORS","CREATE_MESSAGE","createMessage","msg","payload","returnErrors","status","connect","addLead","lead","dispatch","axios","post","process","then","res","leadAdded","data","catch","err","response","useState","name","email","message","setLead","handleChange","e","target","value","onSubmit","preventDefault","for","onChange","placeholder","rows","state","leads","getLeads","get","deleteLead","delete","leadDelete","useEffect","scope","map","onClick","Dashboard","Alert","alert","error","success","info","propTypes","PropTypes","object","isRequired","errors","messages","withAlert","initialState","combineReducers","action","filter","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","options","position","positions","TOP_CENTER","timeout","offset","transition","transitions","FADE","App","template","AlertTemplate","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.12c64580.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-light bg-light\">\r\n      <a className=\"navbar-brand\" href=\"!#\">\r\n        Lead Manager\r\n      </a>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarSupportedContent\"\r\n        aria-controls=\"navbarSupportedContent\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav mr-auto\"></ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export const GET_LEADS = \"GET_LEADS\";\r\nexport const DELETE_LEAD = \"DELETE_LEAD\";\r\nexport const ADD_LEAD = \"ADD_LEAD\";\r\nexport const GET_ERRORS = \"GET_ERRORS\";\r\nexport const CREATE_MESSAGE = \"CREATE_MESSAGE\";\r\n","import { CREATE_MESSAGE, GET_ERRORS } from \"./types\";\r\n\r\nexport const createMessage = (msg) => {\r\n  return {\r\n    type: CREATE_MESSAGE,\r\n    payload: msg,\r\n  };\r\n};\r\n\r\nexport const returnErrors = (msg, status) => {\r\n  return {\r\n    type: GET_ERRORS,\r\n    payload: { msg, status },\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addLead } from \"../../actions/leads\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Form = ({ addLead }) => {\r\n  const [lead, setLead] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    message: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setLead({ ...lead, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    addLead(lead);\r\n    setLead({\r\n      name: \"\",\r\n      email: \"\",\r\n      message: \"\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card card-body mt-4 mb-4\">\r\n        <h2>Add Lead</h2>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-row align-items-center\">\r\n            <div className=\"col-auto mt-2\">\r\n              <label className=\"sr-only\" for=\"inlineFormInput\">\r\n                Name\r\n              </label>\r\n              <input\r\n                onChange={handleChange}\r\n                type=\"text\"\r\n                className=\"form-control mb-2\"\r\n                id=\"inlineFormInput\"\r\n                placeholder=\"Name\"\r\n                name=\"name\"\r\n                value={lead.name}\r\n              />\r\n            </div>\r\n            <div className=\"col-auto \">\r\n              <label className=\"sr-only\" for=\"inlineFormInputGroup\">\r\n                Email\r\n              </label>\r\n              <input\r\n                onChange={handleChange}\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                id=\"inlineFormInputGroup\"\r\n                placeholder=\"Email\"\r\n                name=\"email\"\r\n                value={lead.email}\r\n              />\r\n            </div>\r\n            <div className=\"col-6 col-auto\">\r\n              <label className=\"sr-only\" for=\"inlineFormInputGroup\">\r\n                Message\r\n              </label>\r\n              <textarea\r\n                onChange={handleChange}\r\n                className=\"form-control\"\r\n                placeholder=\"Message\"\r\n                rows=\"1\"\r\n                name=\"message\"\r\n                value={lead.message}\r\n              ></textarea>\r\n            </div>\r\n            <div className=\"col-auto mt-2\">\r\n              <button type=\"submit\" className=\"btn btn-primary mb-2\">\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nForm.propTypes = {\r\n  addLead: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addLead })(Form);\r\n","import { GET_LEADS, DELETE_LEAD, ADD_LEAD } from \"./types\";\r\nimport axios from \"axios\";\r\nimport { createMessage, returnErrors } from \"./messages\";\r\n\r\nexport const getLeads = () => (dispatch) => {\r\n  axios\r\n    .get(process.env.REACT_APP_API_URL + \"/api/leads\")\r\n    .then((res) => {\r\n      dispatch({\r\n        type: GET_LEADS,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n};\r\n\r\nexport const deleteLead = (id) => (dispatch) => {\r\n  axios\r\n    .delete(process.env.REACT_APP_API_URL + `/api/leads/${id}`)\r\n    .then((res) => {\r\n      dispatch(createMessage({ leadDelete: \"Lead Deleted\" }));\r\n      dispatch({\r\n        type: DELETE_LEAD,\r\n        payload: id,\r\n      });\r\n    })\r\n    .catch((err) =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n};\r\n\r\nexport const addLead = (lead) => (dispatch) => {\r\n  axios\r\n    .post(process.env.REACT_APP_API_URL + `/api/leads/`, lead)\r\n    .then((res) => {\r\n      dispatch(createMessage({ leadAdded: \"Lead Added\" }));\r\n      dispatch({\r\n        type: ADD_LEAD,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getLeads, deleteLead } from \"../../actions/leads\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Leads = ({ getLeads, deleteLead, leads }) => {\r\n  useEffect(() => {\r\n    getLeads();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h2>Leads</h2>\r\n\r\n      <table className=\"table\">\r\n        <thead className=\"thead-light\">\r\n          <tr>\r\n            <th scope=\"col\">ID</th>\r\n            <th scope=\"col\">Name</th>\r\n            <th scope=\"col\">Email</th>\r\n            <th scope=\"col\">Message</th>\r\n            <th />\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {leads.map((lead) => (\r\n            <tr key={lead.id}>\r\n              <td>{lead.id}</td>\r\n              <td>{lead.name}</td>\r\n              <td>{lead.email}</td>\r\n              <td>{lead.message}</td>\r\n              <td>\r\n                <button\r\n                  onClick={() => deleteLead(lead.id)}\r\n                  className=\"btn btn-danger btn-sm\"\r\n                >\r\n                  Delete\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n\r\nLeads.propTypes = {\r\n  getLeads: PropTypes.func.isRequired,\r\n  deleteLeads: PropTypes.func.isRequired,\r\n  leads: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  leads: state.leads.leads,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getLeads, deleteLead })(Leads);\r\n","import React from \"react\";\r\nimport Form from \"./Form\";\r\nimport Leads from \"./Leads\";\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n    <>\r\n      <Form />\r\n      <Leads />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useEffect } from \"react\";\r\nimport { withAlert } from \"react-alert\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Alert = ({ alert, error, message }) => {\r\n  useEffect(() => {\r\n    if (error.status === 400) {\r\n      if (error.msg.name) {\r\n        alert.error(\"Name: \" + error.msg.name);\r\n      }\r\n      if (error.msg.email) {\r\n        alert.error(\"Email: \" + error.msg.email);\r\n      }\r\n      if (error.msg.message) {\r\n        alert.error(\"Message: \" + error.msg.message);\r\n      }\r\n    }\r\n    if (message) {\r\n      if (message.leadAdded) {\r\n        alert.success(message.leadAdded);\r\n      }\r\n      if (message.leadDelete) {\r\n        alert.info(message.leadDelete);\r\n      }\r\n    }\r\n  }, [error, message]);\r\n  return <></>;\r\n};\r\n\r\nAlert.propTypes = {\r\n  error: PropTypes.object.isRequired,\r\n  message: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  error: state.errors,\r\n  message: state.messages,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(withAlert()(Alert));\r\n","import { GET_LEADS, DELETE_LEAD, ADD_LEAD } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  leads: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_LEADS:\r\n      return {\r\n        ...state,\r\n        leads: action.payload,\r\n      };\r\n    case DELETE_LEAD:\r\n      return {\r\n        ...state,\r\n        leads: state.leads.filter((lead) => lead.id !== action.payload),\r\n      };\r\n    case ADD_LEAD:\r\n      return {\r\n        ...state,\r\n        leads: [...state.leads, action.payload],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  msg: {},\r\n  status: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return {\r\n        msg: action.payload.msg,\r\n        status: action.payload.status,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { CREATE_MESSAGE } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case CREATE_MESSAGE:\r\n      return (state = action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport leads from \"./leads\";\r\nimport errors from \"./errors\";\r\nimport messages from \"./messages\";\r\n\r\nexport default combineReducers({\r\n  leads,\r\n  errors,\r\n  messages,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport Header from \"./components/layout/Header\";\nimport Dashboard from \"./components/leads/Dashboard\";\nimport Alert from \"./components/layout/Alert\";\n\nimport { positions, transitions, Provider as AlertProvider } from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\n\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\nconst options = {\n  position: positions.TOP_CENTER,\n  timeout: 5000,\n  offset: \"20px\",\n  transition: transitions.FADE,\n};\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <AlertProvider template={AlertTemplate} {...options}>\n        <>\n          <Header />\n          <Alert />\n          <div className=\"container\">\n            <Dashboard />\n          </div>\n        </>\n      </AlertProvider>\n    </Provider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}